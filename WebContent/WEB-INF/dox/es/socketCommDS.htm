<!--
    ScadaBR - Open Source M2M - http://mango.serotoninsoftware.com
    Copyright (C) 20013-2014 Daniel Benitez de Haro.
    @author danibeni
    
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see http://www.gnu.org/licenses/.
 -->

<h1>Descripci&oacute;n</h1>
<p>
Esta fuente de datos est&aacute; diseÃ±ada para conectarse y obtener datos procedentes de cualquier servidor que base
su comunicaci&oacute;n en una conexiÃ³n mediante sockets.

Existen b&aacute;sicamente dos formas de funcionamiento de esta fuente de datos: 
</p>
<ol>
<li>Envio de comandos y recepci&oacute;n de respuestas</li>
<li>Recepci&oacute;n de datos peri&oacute;dicos</li>
</ol>

<h3>Env&iacute;o de comandos y recepci&oacute;n de respuestas</h3>
<p>
Este modo de funcionamiento consiste en el env&iacute;o de los comandos configurados en diferentes puntos de la fuente de datos. Cada comando es
enviado al servidor, junto con uno o varios caracteres que delimitan el comando, siguiendo el formato que entienda el servidor 
(<b>Formato de trama para comando</b>). Tras el env&iacute;o del comando, la fuente de datos empieza a recibir datos procedentes del servidor hasta 
alcanzar la condici&oacute;n de parada establecida.
</p>
<p>
En este modo de operaciÃ³n es posible configurar cada punto de datos para envÃ­ar hasta tres comandos de forma consecutiva hasta obtener la respuesta deseada. Si el <b>N&uacute;mero de comandos</b> configurados en el punto de datos
es mayor que uno, la correspondiente respuesta desde el dispositivo serie al <b>Primer Comando</b> es capturada y comparada con la <b>Respuesta esperada para primer comando</b>. Si ambas coinciden, un <b>Segundo Comando</b> es enviado, repitiendo el proceso
que se acaba de comentar en el caso de que el nÃºmero de comandos configurados sea mayor que dos. Por el contrario, si la respuesta capturada no coincide con la respuesta esperada, se lanza un error indicando esta circunstancia. Esta opciÃ³n de 
poder incluir mÃ¡s de un comando dentro de un punto de datos se ha incluido debido a que algunos dispositivos serie comerciales implementan un protocolo que requiere del envÃ­o de mÃ¡s de un comando para facilitar la respuesta buscada. 
</p>

<h3>Recepci&oacute;n de datos peri&oacute;dicos</h3>
<p>
Este otro modo de funcionamiento se basa en la recepci&oacute;n peri&oacute;dica de datos desde el dispositivo serie. La activaciÃ³n de este modo
solo requiere dejar  con valor cero el campo donde se inserta el <b>N&uacute;mero de comandos</b>, indicando que no se va a enviar ningÃºn comando para obtener una respuesta desde el dispositivo serie, lo cual queda de manifiesto al no mostrarse
ningÃºn campo donde introducir los comandos a enviar. De esta forma, se captura periÃ³dicamente los datos procedentes del dispositivo serie mediante expresiones regulares, almacenando como punto de la fuente de datos la parte de los datos que interesen.
</p>

<h3>Captura de datos en respuesta desde servidor</h3>
<p>
En los dos modos de operaci&oacute;n comentados anteriormente se gestiona la respuesta proporcionada desde el servidor de la misma forma, la cual consiste en recibir hasta que se cumpla una condici&oacute;n de parada definida dentro de los 
parÃ¡metros de configuraci&oacute;n de la fuente de datos.
</p>
<p>Existen dos opciones para esta condici&oacute;n de parada: o bien se sigue el <b>Mismo formato de trama para respuesta</b>
que el <b>Formato de trama para comando</b> enviado, o bien se utiliza un <b>Modo de parada</b> propio para la respuesta procedente del servidor. 
En el caso de que la respuesta precise de su propio <b>Modo de parada</b>, se puede escoger entre recibir un determinado <i>N&uacute;mero de caracteres</i> 
desde el servidor o recibir datos hasta alcanzar uno o varios <i>Caracteres</i> que, seg&uacute;n el <b>Modo Car&aacute;cter</b> elegido, se pueden 
corresponder con uno o varios <b>caracteres ASCII</b> o con un <b>valor Hexadecimal</b>. Si se alcanza la condiciÃ³n de parada antes de que expire el <b>Tiempo de espera a respuesta</b>, la respuesta es procesada mediante expresiones
regulares, extrayendo el valor que se  desea almacenar como punto de la fuente de datos. En caso contrario, se lanza una excepci&oacute;n indicando que ha pasado el tiempo m&aacute;ximo de espera sin que se cumpla la condici&oacute;n de parada 
establecida por la fuente de datos. 
</p>

<h3>Configuraci&oacute;n</h3>
<p>
Toda fuente de datos requiere un <b>Nombre</b> que describa al dispositivo o la funciÃ³n de la fuente de datos, asÃ­ como un <b>Per&iacute;odo de actualizaci&oacute;</b>, donde se
indica cada cuanto tiempo se realizan las operaciones y consulta de datos del servidor, y un n&uacute;mero m&aacute;ximo de <b>Reintentos</b> de conexi&oacute;n con el servidor
antes de indicar un fallo de comunicaciÃ³n.  
</p>
<p>
La configuraci&oacute;n de la comunicaci&oacute;n con el servidor se realiza mediante los par&aacute;metros habituales de una conexi&oacute;n socket, entre los que se encuentran: el nombre del <b>Servidor</b> y el <b>Puerto</b>
por el que el servidor escucha las peticiones. 
</p>
<p>
La mayoria de las comunicaciones basadas en sockets suelen utilizar los caracteres de retorno de carro (\r) y fin de linea (\n) para delimitar el comando recibido o la respuesta enviada. Para facilitar
su inclusi&oacute;n al definir una nueva fuente de datos socket, se dispone del par&aacute;metro <b>Formato de trama para comando</b>, donde es posible seleccionar los caracteres que delimitan el comando a enviar al servidor. Estos mismos caracteres
se pueden utilizar para delimitar la respuesta proporcionada por el propio servidor, utilizando el <b>Mismo formato de trama para respuesta</b>. Si no se selecciona el mismo formato para comando y respuesta, se proporciona la opciÃ³n de definir
un <b>M&eacute;todo de parada</b> alternativo para las respuestas, donde se ir&aacute;n a&ntilde;adiendo datos a la respuesta almacenada hasta que se cumpla la condici&oacute;n de parada configurada en la fuente de datos, basada en una de las siguientes opciones:
</p>
<ul>
<li>
<b>N&uacute;mero de caracteres</b>: Al seleccionar esta opci&oacute;n se est&aacute; indicando que solo se va a almacenar el <b>N&uacute;mero de caracteres</b> indicado de la respuesta obtenida desde el servidor.
</li>
<li>
<b>Hasta car&aacute;cter(es) C</b>: Esta otra opci&oacute;n permite seleccionar mediante el <b>Modo car&aacute;cter</b>, un valor concreto como forma de delimitar la respuesta obtenida desde el servidor. Este valor se puede expresar como <b>car&aacute;cter(es) ASCII</b>
o como <b>Valor hexadecimal</b>,   
</li>
</ul>
<p>
Un aspecto importante, a tener muy en cuenta si se trabaja en el modo de funcionamiento de <b>Recepci&oacute;n de datos peri&oacute;dicos</b>, es la relaci&oacute;n entre el <b>Tama&ntilde;o del buffer</b> de recepci&oacute;n y el <b>Per&iacute;odo de actualizaci&oacute;n</b>
con el per&iacute;odo de tiempo establecido en el servidor para enviar datos de forma peri&oacute;dica. Si el tiempo entre env&iacute;os de datos desde el servidor es peque&ntilde;o, y el perÃ­odo de actualizaci&oacute;n de la fuente de datos grande, es posible que el
buffer de recepci&oacute;n no tenga el tama&ntilde;o suficiente para almacenar todos los datos enviados , con la consecuente p&eacute;rdida de datos. Es por ello que cuando se utilice el modo de funcionamiento de recepci&oacute;n de datos peri&oacute;dicos, resulta
altamente recomendable dimesionar de manera adecuada el tama&ntilde;o de buffer de recepci&oacute;, de acuerdo a la cantidad de datos que se van a recibir en el plazo de tiempo entre actualizaciones de la fuente de datos.
</p>